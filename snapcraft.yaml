name: vscode-html-languageserver
summary: HTML Language Server extracted from VSCode
description: |
  Features
  * Completion provider
  * Formatting
  * Document Symbols & Highlights
  * Document Links
  * CSS mode
  * Javascript mode

adopt-info: vscode-html-languageserver
grade: stable
confinement: strict
base: core20

layout:
  /usr/local/share/.config/yarn:
    bind: $SNAP/usr/local/share/.config/yarn

apps:
  vscode-html-languageserver:
    command: bin/node $SNAP/usr/local/share/.config/yarn/global/node_modules/vscode-html-languageserver/out/node/htmlServerMain.js
    plugs:
      - network
      - home

parts:
  vscode-html-languageserver:
    plugin: npm
    source: https://github.com/microsoft/vscode.git
    build-environment:
      - NODEJS_FIXED_VERSION_18: "v18.19.1"
    npm-node-version: $NODEJS_FIXED_VERSION_18
    # add packages so we can npm install on vscode itself as it's node
    # dependecies are needed to compile the html-languageserver
    build-packages:
      - pkg-config
      - python
      - libkrb5-dev
      - libx11-dev
      - libxkbfile-dev
      - libsecret-1-dev
      - jq
      - moreutils
    override-build: |
      # install the official nodejs so we get the expected npm version
      if [ $SNAP_ARCH == "amd64" ]; then
        ARCH=x64
      elif [ $SNAP_ARCH == "armhf" ]; then
        ARCH=armv7l
      elif [ $SNAP_ARCH == "ppc64el" ]; then
        ARCH=ppc64le
      else
        ARCH=$SNAP_ARCH
      fi
      curl -s https://nodejs.org/dist/"${NODEJS_FIXED_VERSION_18}"/node-"${NODEJS_FIXED_VERSION_18}"-linux-$ARCH.tar.gz | tar xzf - -C "$SNAPCRAFT_PART_INSTALL" --strip-components=1
      npm install -g yarn
      npm install -g gulp
      # @vscode/ripgrep fails to install behind https proxy as vscode-ripgrep
      # did - https://github.com/microsoft/vscode-ripgrep/issues/26 - and we
      # don't need it anyway for the server - same for playwright and electron -
      # also remove vscode-telemetry-extractor since this pulls in
      # vscode-ripgrep as a dependency too and is also not needed to build the
      # vscode-html-languageserver extension so is safe to remove
      jq 'del(.dependencies."@vscode/ripgrep")' package.json | sponge package.json
      jq 'del(.dependencies."@vscode/ripgrep")' remote/package.json | sponge remote/package.json
      jq 'del(.devDependencies."@vscode/telemetry-extractor")' package.json | sponge package.json
      jq 'del(.devDependencies.electron)' package.json | sponge package.json
      jq 'del(.devDependencies.playwright)' package.json | sponge package.json
      yarn why @vscode/ripgrep
      # same for spdlog
      jq 'del(.dependencies."@vscode/spdlog")' package.json | sponge package.json
      jq 'del(.dependencies."@vscode/spdlog")' remote/package.json | sponge remote/package.json
      yarn why @vscode/spdlog
      yarn global add node-gyp
      yarn install
      cd extensions/html-language-features/server
      yarn install
      yarn run compile
      yarn global add --prefix $SNAPCRAFT_PART_INSTALL $(yarn pack . | grep "Wrote tarball to" | cut -f2 -d'"')
      # install typescript manually as a dependency
      yarn global add --prefix $SNAPCRAFT_PART_INSTALL typescript
      # fixup install location of various binaries
      mkdir -p $SNAPCRAFT_PART_INSTALL/usr/local/share/.config
      mv /usr/local/share/.config/yarn $SNAPCRAFT_PART_INSTALL/usr/local/share/.config
      for bin in node-gyp tsc tsserver; do rm $SNAPCRAFT_PART_INSTALL/bin/$bin; ln -s ../usr/local/share/.config/yarn/global/node_modules/.bin/$bin $SNAPCRAFT_PART_INSTALL/bin/$bin; done
      snapcraftctl set-version $(jq -r .version package.json)
